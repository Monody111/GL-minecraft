//
//  Section.hpp
//  GL
//
//  Created by Chen.Zr on 2020/1/31.
//  Copyright Â© 2020 Chen.Zr. All rights reserved.
//

#ifndef Section_hpp
#define Section_hpp

#include <GL/glew.h>
#include <vector>
#include <glm/glm.hpp>
#include "Mesh.hpp"

class Section{

public:
    
    Section();
    
//    Model *model = nullptr;
    Mesh *mesh = nullptr;

    std::vector<GLfloat> vertextPosition{
        //F
        1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0,
        0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0,
        //B
        0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0,
        1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0,
        //L
        0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0,
        0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0,
        //R
        1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0,
        1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0,
        //U
        1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0,
        //D
        1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0
    };
    
    std::vector<GLfloat> vertices{
        0, 0, 0,
        1, 0, 0,
        1, 1, 0,
        0, 1, 0,
        0, 0, 1,
        1, 0, 1,
        1, 1, 1,
        0, 1, 1
    };
    
    std::vector<GLfloat> normal{
        //F
        0.0, 0.0, 1.0,
        //B
        0.0, 0.0,-1.0,
        //L
        1.0, 0.0, 0.0,
        //R
        -1.0,0.0, 0.0,
        //U
        0.0, 1.0, 0.0,
        //D
        0.0,-1.0, 0.0
    };
    
    std::vector<GLuint> indices{
        0, 1, 3, 3, 1, 2,
        1, 5, 2, 2, 5, 6,
        5, 4, 6, 6, 4, 7,
        4, 0, 7, 7, 0, 3,
        3, 2, 7, 7, 2, 6,
        4, 5, 0, 0, 5, 1
    };
    
    std::vector<GLfloat> texCoords =
    {
        0, 0,
        1, 0,
        1, 1,
        0, 1
    };
    
    std::vector<int> texInds = { 0, 1, 3, 3, 1, 2 };
    
    std::vector<GLfloat> textureCroods{
        //F
        1.0, 0.0, 0.0, 0.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
        //B
        1.0, 0.0, 0.0, 0.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
        //L
        1.0, 0.0, 0.0, 0.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
        //R
        1.0, 0.0, 0.0, 0.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
        //U
        1.0, 0.0, 0.0, 0.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
        //D
        1.0, 0.0, 0.0, 0.0, 1.0, 1.0,
        0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
    };
};

#endif /* Section_hpp */
